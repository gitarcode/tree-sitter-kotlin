================================================================================
For statements
================================================================================

for (value in values) {}

--------------------------------------------------------------------------------

(source_file
  (for_statement
    var_decl: (variable_declaration
               id: (simple_identifier))
    expression: (simple_identifier)
    body: (control_structure_body
      (block))))

================================================================================
Statements separated by semicolon
================================================================================

override fun isDisposed(): Boolean { expectUnreached();  return false }

--------------------------------------------------------------------------------

(source_file
  (function_declaration
    modifiers: (modifiers
      (member_modifier))
    name: (simple_identifier)
    parameters: (function_value_parameters)
    type: (user_type
      (type_identifier))
    body: (function_body
      (block
        (statements
          (call_expression
            expression: (simple_identifier)
              args: (value_arguments))
          (jump_expression
            (boolean_literal)))))))

================================================================================
Getters
================================================================================

val x get () = 2

val ty x get () = 3

--------------------------------------------------------------------------------

(source_file
  (property_declaration
    (binding_pattern_kind)
    var_decl: (variable_declaration
      id: (simple_identifier))
    (getter
      (function_body
        (integer_literal))))
  (property_declaration
    (binding_pattern_kind)
    (user_type
      (type_identifier))
    var_decl: (variable_declaration
      id: (simple_identifier))
    (getter
      (function_body
        (integer_literal)))))

================================================================================
Multi variable declarations
================================================================================

fun foo() {
  val (x, y) = f()
}
--------------------------------------------------------------------------------

(source_file
  (function_declaration
    name: (simple_identifier)
    parameters: (function_value_parameters)
    body: (function_body
      (block
        (statements
          (property_declaration
            (binding_pattern_kind)
            var_decl: (multi_variable_declaration
              (variable_declaration
                id: (simple_identifier))
              (variable_declaration
                id: (simple_identifier)))
            initializer: (call_expression
              expression: (simple_identifier)
                args: (value_arguments))))))))


================================================================================
Try catch
================================================================================

try {
  doSomething()
} catch (e: Exception) {
  println(e)
}

--------------------------------------------------------------------------------

 (source_file
  (try_expression
    (block
      (statements
        (call_expression
          expression: (simple_identifier)
            args: (value_arguments))))
    (catch_block
      name: (simple_identifier)
      type: (user_type
        (type_identifier))
      body: (block
        (statements
          (call_expression
            expression: (simple_identifier)
              args: (value_arguments
                (value_argument
                  (simple_identifier)))))))))
